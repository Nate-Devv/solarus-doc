/**
\page lua_api_circle_movement Circle movement

\tableofcontents

A circle movement makes a circular trajectory around a center point or
a \ref lua_api_entity "map entity".

\section lua_api_circle_movement_inherited_methods Methods inherited from movement

Circle movements are particular \ref lua_api_movement "movement" objects.
Therefore, they inherit all methods from the type movement.

See \ref lua_api_movement_methods to know these methods.

\section lua_api_circle_movement_methods Methods of the type circle movement

The following methods are specific to circle movements.

\subsection lua_api_circle_movement_set_center circle_movement:set_center(x, y), circle_movement:set_center(entity, [dx, dy])

Sets the center of this movement as a fixed point or a \ref lua_api_entity
"map entity".

To make circles around a fixed point:
- \c x (number): X coordinate of the center.
- \c y (number): Y coordinate of the center.

To make circles around a map entity (only during a \ref lua_api_game "game"):
- \c entity (\ref lua_api_entity "entity"): The center entity.
- \c dx (number, optional): X offset to add to the center entity's coordinates
  (default 0).
- \c dy (number, optional): Y offset to add to the center entity's coordinates
  (default 0).

\subsection lua_api_circle_movement_get_radius circle_movement:get_radius()

Returns the radius of circles to make.

If \ref lua_api_circle_movement_get_radius_speed
"circle_movement:get_radius_speed()"
is not 0,
radius changes are made gradually.
- Return value (number): The wanted radius in pixels.

\subsection lua_api_circle_movement_set_radius circle_movement:set_radius(radius)

Sets the radius of circles to make.

If \ref lua_api_circle_movement_get_radius_speed
"circle_movement:get_radius_speed()"
is not 0,
the radius will be updated gradually.
- \c radius (number): The new wanted radius in pixels.

\subsection lua_api_circle_movement_get_radius_speed circle_movement:get_radius_speed()

Returns the speed of radius changes.
- Return value (number): The speed in pixels per second, or 0 if radius
  changes are immediate.

\subsection lua_api_circle_movement_set_radius_speed circle_movement:set_radius_speed(radius_speed)

Sets the radius to be updated immediately of gradually (at the specified
speed) towards its wanted value.
- \c radius_speed (number): The speed of radius changes in pixels per
  second, or 0 to make radius changes immediate.

\subsection lua_api_circle_movement_is_clockwise circle_movement:is_clockwise()

Returns whether circles are made clockwise or counter-clockwise.
- Return value (boolean): \c true if circles are clockwise.

\subsection lua_api_circle_movement_set_clockwise circle_movement:set_clockwise([clockwise])

Sets whether circles are made clockwise or counter-clockwise.
- \c clockwise (boolean, optional): \c true to make circles clockwise. No value means \c true.

\subsection lua_api_circle_movement_get_initial_angle circle_movement:get_initial_angle()

Returns the angle from where the first circle starts.
- Return value (number): The initial angle in degrees.

\subsection lua_api_circle_movement_set_initial_angle circle_movement:set_initial_angle(initial_angle)

Sets the angle from where the first circle should start.
- \c initial_angle (number): The initial angle in degrees.

\subsection lua_api_circle_movement_get_angle_speed circle_movement:get_angle_speed()

Returns the speed of the angle variation.
- Return value (number): The angle speed in degrees per second.

\subsection lua_api_circle_movement_set_angle_speed circle_movement:set_angle_speed(angle_speed)

Sets the speed of the angle variation.
- \c angle_speed (number): The new angle speed in degrees per second.

\subsection lua_api_circle_movement_get_max_rotations circle_movement:get_max_rotations()

Returns the maximum number of rotations of this movement.

When this number of rotations is reached, the movement stops.
- Return value (number): The maximum number of rotations to make (\c 0
  means infinite).

\subsection lua_api_circle_movement_set_max_rotations circle_movement:set_max_rotations(max_rotations)

Sets the maximum number of rotations of this movement.

When this number of rotations is reached, the movement stops.
- \c max_rotations (number): The maximum number of rotations to make (\c 0
  means infinite).

\remark The movement stops itself by setting its radius to 0.
Therefore, if the radius is set to change gradually (see
\ref lua_api_circle_movement_get_radius_speed
"circle_movement:get_radius_speed()"),
the movement will continue for a while until the radius reaches 0.

\remark When the movement has stopped, it restarts later if it was set
to loop (see \ref lua_api_circle_movement_get_loop_delay
"circle_movement:get_loop_delay()"),
and again, possibly gradually.

\subsection lua_api_circle_movement_get_duration circle_movement:get_duration()

Returns the maximum duration of this movement.

When this delay is reached, the movement stops.
- Return value (number): The duration of the movement in milliseconds
  (\c 0 means infinite).

\subsection lua_api_circle_movement_set_duration circle_movement:set_duration(duration)

Sets the maximum duration of this movement.

When this delay is reached, the movement stops.
- \c duration (number): The duration of the movement in milliseconds
  (\c 0 means infinite).

\remark The movement is stopped by automatically setting its radius to 0.
Therefore, if the radius is set to change gradually (see
\ref lua_api_circle_movement_get_radius_speed
"circle_movement:get_radius_speed()"),
the movement will continue for a while until the radius reaches 0.

\remark When the movement has stopped, it will then restart if it was set
to loop (see \ref lua_api_circle_movement_set_loop_delay
"circle_movement:set_loop_delay()"),
and again, possibly gradually.

\subsection lua_api_circle_movement_get_loop_delay circle_movement:get_loop_delay()

Returns the delay after which this movement restarts.
- Return value (number): The restart delay in milliseconds (\c 0 means no
  restart).

\subsection lua_api_circle_movement_set_loop_delay circle_movement:set_loop_delay(loop_delay)

Sets the delay after which this movement restarts.
- \c loop_delay (number): The restart delay in milliseconds (\c 0 means no
  restart).

\remark This delay is applied if the movement get stopped by reaching the
\ref lua_api_circle_movement_get_max_rotations "maximum number of rotations"
or the 
\ref lua_api_circle_movement_get_duration "maximum duration".

\remark When the movement restarts, the radius starts from 0 and gets back
to its previous value, possibly gradually
(see \ref lua_api_circle_movement_set_radius_speed
"circle_movement:set_radius_speed()").

\section lua_api_circle_movement_inherited_events Events inherited from movement

Circle movements are particular \ref lua_api_movement "movement" objects.
Therefore, they inherit all events from the type movement.

See \ref lua_api_movement_events to know these events.

*/

