/**
\page lua_api_sensor Sensor

\tableofcontents

A sensor is an invisible detector that triggers something when the
\ref lua_api_hero "hero" overlaps it.

This type of \ref lua_api_entity "map entity" can be declared in the
\ref lua_api_map_overview_files "map data file".
It can also be created dynamically with
\ref lua_api_map_create_sensor "map:create_sensor()".

\section lua_api_sensor_overview Overview

Unlike \ref lua_api_switch "switches",
\ref lua_api_sensor "sensors" cannot be avoided by a jump.
If you want the \ref lua_api_hero "hero"
to be detected for sure when he enters somewhere,
use a sensor rather than an invisible switch.

When a sensor is activated, the event
\ref lua_api_sensor_on_activated "sensor:on_activated()"
is called.
Define that event to implement what happens:
\ref lua_api_map_close_doors "closing a door",
\ref lua_api_game_start_dialog "starting a dialog", etc.

Sensors can have any size, but like all entities, their width and height
must be multiples of 8 pixels.
The minimum size if 16x16 pixels (the size of the hero).

A sensor is activated only if the bounding box of the hero
is entirely on the sensor.

\section lua_api_sensor_inherited_methods Methods inherited from map entity

Sensors are particular \ref lua_api_entity "map entities".
Therefore, they inherit all methods from the type map entity.

See \ref lua_api_entity_methods to know these methods.

\section lua_api_sensor_methods Methods of the type sensor

None.

\section lua_api_sensor_inherited_events Events inherited from map entity

Events are callback methods automatically called by the engine if you define
them.

Sensors are particular \ref lua_api_entity "map entities".
Therefore, they inherit all events from the type map entity.

See \ref lua_api_entity_events to know these events.

\section lua_api_sensor_events Events of the type sensor

The following events are specific to sensors.

\subsection lua_api_sensor_on_activated sensor:on_activated()

Called when the \ref lua_api_hero "hero" overlaps this sensor.

The bounding box of the hero (of size 16x16 pixels)
must fit entirely the sensor. This means that if the sensor has a size of
16x16, the hero and the sensor must overlap perfectly.

This event is the right place to define the action that you want your sensor
to perform.

\subsection lua_api_sensor_on_activated_repeat sensor:on_activated_repeat()

Called continuously while the \ref lua_api_hero "hero" overlaps this sensor.

\subsection lua_api_sensor_on_left sensor:on_left()

Called when the
\ref lua_api_hero "hero"
stops overlapping this sensor.

\subsection lua_api_sensor_on_collision_explosion sensor:on_collision_explosion()

Called when an \ref lua_api_explosion "explosion"
touches this sensor.

*/

