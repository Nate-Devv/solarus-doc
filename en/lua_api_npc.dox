/**
\page lua_api_npc Non-playing character

\tableofcontents

A non-playing character (NPC)
is somebody or something that the \ref lua_api_hero "hero" can interact with
by pressing the
\ref lua_api_game_overview_commands "action command"
or by using an
\ref lua_api_item "equipment item"
just in front of it.

This type of \ref lua_api_entity "map entity" can be declared in the
\ref lua_api_map_overview_files "map data file".
It can also be created dynamically with
\ref lua_api_map_create_npc "map:create_npc()".

\section lua_api_npc_overview Overview

An %NPC
is not necessarily a person: it can also be a more general,
solid interactive entity.
In this case, it is called a generalized %NPC.

Interactions with an %NPC may start a dialog or be forwarded to Lua.
More precisely, what happens can be one of the following.
- A dialog starts.
- A Lua event is called on the %NPC itself,
  for instance \ref lua_api_npc_on_interaction "npc:on_interaction()".
  or \ref lua_api_npc_on_interaction_item "npc:on_interaction_item()".
- A Lua event is called on an \ref lua_api_item "equipment item"
  for instance \ref lua_api_item_on_npc_interaction "item:on_npc_interaction()".
  or \ref lua_api_item_on_npc_interaction_item "item:on_npc_interaction_item()".

An %NPC can move if you apply a movement to it by calling
\ref lua_api_movement_start "movement:start(npc)".

The size of an %NPC is always 16x16 pixels
(like the \ref lua_api_hero "hero")
and the %NPC is an obstacle for most \ref lua_api_entity "map entities",
including the hero.

Usual NPCs (i.e. non-generalized ones)
are suited to usual interactions with people.
They must have a sprite with at least four directions, and with animations
named \c "stopped" and (if you move them) \c "walking".
These predefined animations are automatically started by the engine when you
make the %NPC move.
When the hero talks to them, their sprite automatically stop its animation and
looks into his direction.

Example of use of a usual %NPC: a non-playing character walking randomly in a town.

Generalized NPCs are highly customizable.
They are solid entities that the hero can interact with, and there is essentially
nothing more predefined by the engine.
They may even have no sprite.
You can choose to allow interactions with the hero from any of the four
directions or from a precise direction only.

Example of use of a generalized %NPC: a stone with something to read on it.

\section lua_api_npc_inherited_methods Methods inherited from map entity

Non-playing characters are particular \ref lua_api_entity "map entities".
Therefore, they inherit all methods from the type map entity.

See \ref lua_api_entity_methods to know these methods.

\section lua_api_npc_methods Methods of the type non-playing character

None.

\section lua_api_npc_inherited_events Events inherited from map entity

Events are callback methods automatically called by the engine if you define
them.

Non-playing characters are particular \ref lua_api_entity "map entities".
Therefore, they inherit all events from the type map entity.

See \ref lua_api_entity_events to know these events.

\section lua_api_npc_events Events of the type non-playing character

The following events are specific to non-playing characters.

\subsection lua_api_npc_on_interaction npc:on_interaction()

Called when the \ref lua_api_hero "hero" interacts
(the player pressed the \ref lua_api_game_overview_commands "action command")
in front of this %NPC,
if the %NPC has the property to notify its own Lua script.

\subsection lua_api_npc_on_interaction_item npc:on_interaction_item(item_used)

Called when the \ref lua_api_hero "hero" uses any
\ref lua_api_item "equipment item"
(the player pressed an \ref lua_api_game_overview_commands "item command") with
this %NPC,
if the %NPC has the property to notify its own Lua script.
- \c item_used (\ref lua_api_item "item"): The item currently used by
  the player.
- Return value (boolean): \c true if an interaction happened. If you return
  \c false or nothing, then \ref lua_api_item_on_using
  "item_used:on_using()" will be called
  (just like if there was no %NPC in front of the hero).

\subsection lua_api_npc_on_collision_fire npc:on_collision_fire()

Called when \ref lua_api_fire "fire" touches this %NPC,
if the %NPC has the property to notify its own Lua script.

*/

