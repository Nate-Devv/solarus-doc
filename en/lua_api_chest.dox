/**
\page lua_api_chest Chest

\tableofcontents

A chest is a box that contains a treasure.

This type of \ref lua_api_entity "map entity" can be declared in the
\ref lua_api_map_overview_files "map data file".
It can also be created dynamically with
\ref lua_api_map_create_chest "map:create_chest()".

\section lua_api_chest_overview Overview

A chest may contain a treasure or be empty.
- If the chest contains a treasure, the engine will give it automatically
  to the player when the \ref lua_api_hero "hero" opens its.
  If the treasure is not
  \ref lua_api_item_is_obtainable "obtainable",
  it is replaced by an empty treasure.
- If the chest is empty, it may either mean that there is really
  no treasure, or that what happens when the player opens it
  is defined dynamically by your script
  (see the \ref lua_api_chest_on_empty "chest:on_empty()" event).

The state of a chest is either open or closed.
When a chest is closed, its treasure (if any) is still inside
and the \ref lua_api_hero "hero" can get it.

A chest appears initially open on the \ref lua_api_map "map"
if its state is saved and the corresponding
\ref lua_api_game_get_value "boolean value" is \c true.
If is possible to save the state of a chest (open or closed)
even if it contains no treasure.

\section lua_api_chest_inherited_methods Methods inherited from map entity

Chests are particular \ref lua_api_entity "map entities".
Therefore, they inherit all methods from the type map entity.

See \ref lua_api_entity_methods to know these methods.

\section lua_api_chest_methods Methods of the type chest

The following methods are specific to chests.

\subsection lua_api_chest_is_open chest:is_open()

Returns the state of this chest (open or closed).
- Return value (boolean): \c true if this chest is open, \c false if it is
  closed.

\subsection lua_api_chest_set_open chest:set_open([open])

Sets the state of this chest (open or closed).
If you close the chest, its content (if any) is restored and can be obtained
again.
- \c open (boolean, optional): \c true to make the chest open, \c false
  to make it closed. No value means \c true.

\section lua_api_chest_inherited_events Events inherited from map entity

Events are callback methods automatically called by the engine if you define
them.

Chests are particular \ref lua_api_entity "map entities".
Therefore, they inherit all events from the type map entity.

See \ref lua_api_entity_events to know these events.

\section lua_api_chest_events Events of the type chest

The following events are specific to chests.

\subsection lua_api_chest_on_empty chest:on_empty()

Called when the hero opens this chest if the chest has no treasure.

Your script has to define what happens.
You may either give a treasure decided dynamically
(by calling \ref lua_api_hero_start_treasure "hero:start_treasure()")
or do something else: show a dialog, play a sound, close the chest
again, etc.

The hero is automatically freezed during the whole process of opening a chest.
If you don't give him a treasure,
then you have to unblock him explicitely by calling
\ref lua_api_hero_unfreeze "hero:unfreeze()" when you want to restore control
to the player.

If you don't define this event, by default, the engine does nothing special
and just restores control to the player.

*/

