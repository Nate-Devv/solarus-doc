/**
\page lua_api_destructible Destructible object

\tableofcontents

A destructible object is an entity that can be cut or lifted
by the \ref lua_api_hero "hero" and that may hide a
\ref lua_api_pickable "pickable treasure".

This type of \ref lua_api_entity "map entity" can be declared in the
\ref lua_api_map_overview_files "map data file".
It can also be created dynamically with
\ref lua_api_map_create_destructible "map:create_destructible()".

\section lua_api_destructible_overview Overview

Destructible objects can be customized in various ways.
You can allow the hero to lift them or to cut them.
The ones that can be lifted may require a minimum level of
the \c "lift" \ref lua_api_game_get_ability "ability".
Their size is always 16x16 pixels (like the
\ref lua_api_hero "hero").

\section lua_api_destructible_inherited_methods Methods inherited from map entity

Destructible objects are particular \ref lua_api_entity "map entities".
Therefore, they inherit all methods from the type map entity.

See \ref lua_api_entity_methods to know these methods.

\section lua_api_destructible_methods Methods of the type destructible

The following methods are specific to destructible objects.

\subsection lua_api_destructible_get_treasure destructible:get_treasure()

Returns what \ref lua_api_pickable
"pickable treasure" this object will drop when being lifted, when being
cut or when exploding.
- Return value 1 (string): Name of an \ref lua_api_item
  "equipment item".
  \c nil means no item (in this case, other return values are \c nil too).
- Return value 2 (number): Variant of this equipment item
  (\c 1 means the first variant).
- Return value 3 (string): Name of the boolean
  value that stores in the \ref lua_api_game "savegame"
  whether the treasure dropped is found.
  \c nil means that the treasure is not saved.

\subsection lua_api_destructible_set_treasure destructible:set_treasure([item_name, [variant, [savegame_variable]]])

Sets the \ref lua_api_pickable
"pickable treasure" that this object will drop when being lifted, when being
cut or when exploding.
- \c item_name (string, optional): Name of an \ref lua_api_item
  "equipment item".
  \c nil or no value means no item.
- \c variant (number, optional): Variant of this equipment item
  (\c 1 means the first variant). The default value is \c 1.
- \c savegame_variable (string, optional): Name of the boolean
  value that stores in the \ref lua_api_game "savegame"
  whether the treasure dropped is found.
  \c nil or no value means that the treasure is not saved.

\subsection lua_api_destructible_get_destruction_sound destructible:get_destruction_sound()

Returns the sound to be played when this object is cut or broken.
- Return value (string): Id of the destruction sound.
  \c nil means that no sound will be played.

\subsection lua_api_destructible_set_destruction_sound destructible:set_destruction_sound(destruction_sound_id)

Sets the sound to be played when this object is cut or broken.
- \c destruction_sound_id (string): Id of the destruction sound.
  \c nil means that no sound will be played.

\subsection lua_api_destructible_get_weight destructible:get_weight()

Returns the weight of this destructible object.
The weight corresponds to the \c "lift"
\ref lua_api_game_get_ability "ability" required to lift the object.
- Return value (number): The level of \c "lift" ability required.
  \c 0 allows the player to lift the object unconditionally.
  The special value \c -1 means that the object can never be lifted.

\subsection lua_api_destructible_set_weight destructible:set_weight()

Sets the weight of this destructible object.
The weight corresponds to the \c "lift"
\ref lua_api_game_get_ability "ability" required to lift the object.
- \c weight (number): The level of \c "lift" ability required.
  \c 0 allows the player to lift the object unconditionally.
  The special value \c -1 means that the object can never be lifted.

\subsection lua_api_destructible_get_can_be_cut destructible:get_can_be_cut()

Returns whether this object can be cut by the sword.
- Return value (boolean): \c true if this object can be cut by the sword.

\subsection lua_api_destructible_set_can_be_cut destructible:set_can_be_cut(can_be_cut)

Sets whether this object can be cut by the sword.
- \c can_be_cut (boolean, optional): \c true to allow the player to cut this
  object with the sword. No value means \c true.

\subsection lua_api_destructible_get_can_explode destructible:get_can_explode()

Returns whether this object explodes when it is hit or after a delay when it
is lifted.
- Return value (boolean): \c true if this object can explode.

\subsection lua_api_destructible_set_can_explode destructible:set_can_explode(can_explode)

Sets whether this object explodes when it is hit or after a delay when it
is lifted.
- \c can_explode (boolean, optional): \c true to make the object able to
  explode. No value means \c true.

\subsection lua_api_destructible_get_can_regenerate destructible:get_can_regenerate()

Returns whether this object regenerates after a delay when it is destroyed.
- Return value (boolean): \c true if this object can regenerate.

\subsection lua_api_destructible_set_can_regenerate destructible:set_can_regenerate(can_regenerate)

Sets whether this object regenerates after a delay when it is destroyed.
- \c can_regenerate (boolean, optional): \c true to make the object able to
  regenerate. No value means \c true.

\subsection lua_api_destructible_get_damage_on_enemies destructible:get_damage_on_enemies()

Returns the number of life points that an \ref lua_api_enemy "enemy"
loses when the \ref lua_api_hero "hero" throws this object at it.
- Return value (number): The number of life points to remove to an enemy
  hit by this object. \c 0 means that enemies will ignore this object.

\subsection lua_api_destructible_set_damage_on_enemies destructible:set_damage_on_enemies(damage_on_enemies)

Sets the number of life points that an \ref lua_api_enemy "enemy"
loses when the \ref lua_api_hero "hero" throws this object at it.
- \c damage_on_enemies (number): The number of life points to remove to an enemy
  hit by this object. \c 0 means that enemies will ignore this object.

\subsection lua_api_destructible_get_modified_ground destructible:get_modified_ground()

Returns the ground defined by this destructible object on the map.

The presence of a destructible object can modify the ground of the map.
The ground is usually \c "wall", but it may sometimes be \c "traversable",
or for example \c "grass" to make the destructible object
traversable too but with an additional grass sprite below the hero.
- Return value (string): The ground defined by this destructible object.
  See \ref lua_api_map_get_ground "map:get_ground()" for the list of grounds.

\section lua_api_destructible_inherited_events Events inherited from map entity

Events are callback methods automatically called by the engine if you define
them.

Destructible objects a reparticular \ref lua_api_entity "map entities".
Therefore, they inherit all events from the type map entity.

See \ref lua_api_entity_events to know these events.

\section lua_api_destructible_events Events of the type destructible

The following events are specific to destructible objects.

\subsection lua_api_destructible_on_looked destructible:on_looked()

Called when the \ref lua_api_hero "hero" looks this destructible object,
that is, when the player presses the action key but is not allowed to lift the
object.

By default, nothing happens in this case.
You can for example show a dialog to give the player a hint like
"This is too heavy".

\remark If you want to do the same action for all destructible objects of your
game, use the \ref lua_api_main_get_metatable "metatable trick".
Just define this event on the metatable of the destructible object type
instead of each individual object, and it will be applied to all
of them.

\subsection lua_api_destructible_on_cut destructible:on_cut()

Called when the hero has just cut this destructible object.

\subsection lua_api_destructible_on_lifting destructible:on_lifting()

Called when the hero starts lifting this destructible object.

At this point, the \ref lua_api_hero "hero" is in
\ref lua_api_hero_get_state "state" \c "lifting".
The animation \c "lifting" of his sprites is playing and the player
cannot control the hero.

\remark This destructible object no longer exists (unless it can
  \ref lua_api_destructible_get_can_regenerate "regenerate").
  It is replaced by a
  \ref lua_api_carried_object "carried object" with the same sprite.

\subsection lua_api_destructible_on_exploded destructible:on_exploded()

Called when this destructible object is exploding.

If \ref lua_api_destructible_get_can_explode "destructible:get_can_explode()"
is \c true, the destructible object explodes when there is an
\ref lua_api_explosion "explosion" nearby or when the hero lifts it, after
a delay.

\subsection lua_api_destructible_on_regenerating destructible:on_regenerating()

Called when this destructible object regenerates.

If \ref lua_api_destructible_get_can_regenerate
"destructible:get_can_regenerate()" is \c true,
the destructible object regenerates after a delay when it was lifted
or exploded.

*/

