/**
\page lua_api_door Door

\tableofcontents

A door is an obstacle that can be opened by Lua,
and optionally by the \ref lua_api_hero "hero" under some conditions.

This type of \ref lua_api_entity "map entity" can be declared in the
\ref lua_api_map_overview_files "map data file".
It can also be created dynamically with
\ref lua_api_map_create_door "map:create_door()".

\section lua_api_door_overview Overview

A door may have four states: open, closed, opening or closing.
States opening and closing are transitional states used to play a
door opening or closing animation on the door's sprite.
The sprite of a door must define animations \c "open" and \c "closed".
Animations \c "opening" and \c "closing" are optional: if they don't exist,
the door won't use states opening and closing.
If they exist, be aware that after you call a function like
\ref lua_api_map_open_doors "map:open_doors()", your door will first be in state
opening (for the duration of its sprite \c "opening" animation),
and only after that, will get in state open.
In other words, \ref lua_api_door_is_open "door:is_open()" does not return
true as soon as you open the door, unless the sprite has no animation
\c "opening".

Doors often work by pairs.
Indeed, when you have two adjacent rooms on the same \ref lua_api_map "map",
you normally use two door entities.
They can be linked by setting a common prefix to their name.
Then, you can use
\ref lua_api_map_open_doors "map:open_doors()"
and
\ref lua_api_map_close_doors "map:close_doors()"
to handle both of them at the same time more easily.
Additionaly, \ref lua_api_dynamic_tile "dynamic tiles"
whose names also have this
prefix and end by <tt>_open</tt> or <tt>_closed</tt>
are automatically
enabled or disabled, respectively.
This helps a lot to make tiles follow harmoniously the state of doors.
See
\ref lua_api_map_open_doors "map:open_doors()"
for more information about these mechanisms.

A door may be opened by one of the following methods:
- \c "none": Cannot be opened by the player. You can only open it
  explicitly by calling \ref lua_api_map_open_doors "map:open_doors()".
- \c "interaction": Can be opened by pressing the
  \ref lua_api_game_overview_commands "action command" in front of it.
- \c "interaction_if_savegame_variable": Can be opened by pressing the
  \ref lua_api_game_overview_commands "action command" in front of it,
   provided that a specific savegame variable is set.
- \c "interaction_if_item": Can be opened by pressing the
  \ref lua_api_game_overview_commands "action command" in front of it,
  provided that the player has a specific \ref lua_api_item
  "equipment item".
- \c "explosion": Can be opened by an explosion.

For doors whose opening method is
\c "interaction_if_savegame_variable" or \c "interaction_if_item",
you can specify which savegame variable or \ref lua_api_item
"equipment item" is required.
You can also choose whether opening the door should consume
the savegame variable of equipment item that was required.

\section lua_api_door_inherited_methods Methods inherited from map entity

Doors are particular \ref lua_api_entity "map entities".
Therefore, they inherit all methods from the type map entity.

See \ref lua_api_entity_methods to know these methods.

\section lua_api_door_methods Methods of the type door

The following methods are specific to doors.

\subsection lua_api_door_is_open door:is_open()

Returns whether this door is open.
- Return value (boolean): \c true if this door is open, \c false if it is
  opening, closed or closing.

\subsection lua_api_door_is_opening door:is_opening()

Returns whether this door is being opened.
- Return value (boolean): \c true if this door is being opened, \c false if it is
  open, closed or closing.

\subsection lua_api_door_is_closed door:is_closed()

Returns whether this door is closed.
- Return value (boolean): \c true if this door is closed, \c false if it is
  closing, open or opening.

\subsection lua_api_door_is_closing door:is_closing()

Returns whether this door is being closed.
- Return value (boolean): \c true if this door is being closed, \c false if it is
  closed, open or opening.

\section lua_api_door_inherited_events Events inherited from map entity

Events are callback methods automatically called by the engine if you define
them.

Doors are particular \ref lua_api_entity "map entities".
Therefore, they inherit all events from the type map entity.

See \ref lua_api_entity_events to know these events.

\section lua_api_door_events Events of the type door

The following events are specific to doors.

\subsection lua_api_door_on_opened door:on_opened()

Called when this door starts being opened.

\subsection lua_api_door_on_closed door:on_closed()

Called when this door starts being closed.

*/


